group 'se.codeslasher.docker'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {

    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'com.fasterxml.jackson.core:jackson-core:2.8.2'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.8.2'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.2'
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    //compile 'com.github.jnr:jnr-unixsocket:0.12'

    compile('com.kohlschutter.junixsocket:junixsocket-native-common:2.0.4') {
        exclude module: 'log4j'
    }
    compile('com.kohlschutter.junixsocket:junixsocket-common:2.0.4') {
        exclude module: 'log4j'
    }


    compileOnly 'org.projectlombok:lombok:1.16.10'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "com.github.tomakehurst:wiremock:2.1.12"
    testCompile 'org.assertj:assertj-core:3.5.2'
    testCompile 'org.slf4j:slf4j-simple:1.7.21'

}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}
configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime

}
task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
}
tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}
task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}